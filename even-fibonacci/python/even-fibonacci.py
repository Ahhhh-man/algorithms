"""

Problem 2 - Even Fibonacci Numbers (direct ver) [https://projecteuler.net/problem=2]

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci
sequence whose values do not exceed four million, find the sum of the even-valued terms.

"""

def fibonacci(num):
    return (fibonacci(num - 1) + fibonacci(num - 2)) if num > 1 else 1


def even_fibonacci_sum(upper_bound):
    return sum(fibonacci(i) for i in range(upper_bound) if (fibonacci(i) % 2) == 0)


counter = 1
while fibonacci(counter) <= 4_000_000:
    counter += 1
# counter = 33, hence fibonacci(33) > 4_000_000 where 33 is the smallest int

print(even_fibonacci_sum(counter))  # 4613732 (my answer)
